/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define DVORAK  1
#define LOWER   2
#define RAISE   3
#define NUMPAD  4

&mt {  // mod-tap config
    flavor = "balanced";
    tapping-term-ms = <150>;
    quick-tap-ms = <150>;
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <150>;
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        td_ls: tap_dance_left_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LEFT_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&mo NUMPAD>;
        };

        td_lsnt: tap_dance_left_shift_num_toggle {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LEFT_SHIFT_NUM_TOGGLE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&tog NUMPAD>;
        };

        td_lb: tap_dance_left_brackets{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LEFT_BRACKETS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp LBRC>, <&kp LBKT>;
        };
    
        td_rb: tap_dance_right_brackets{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RIGHT_BRACKETS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RPAR>, <&kp RBRC>, <&kp RBKT>;
        };

        td_bs_del: tap_dance_backspace_delete{
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BACKSPACE_DELETE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp DEL>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5      |                    |    6       |  7    |  8    |  9   |   0   | BKSPC    |
// |  TAB  |  Q  |  W  |  E   |  R   |  T      |                    |    Y       |  U    |  I    |  O   |   P   |   \      |
// |  ESC  |  A  |  S  |  D   |  F   |  G      |                    |    H       |  J    |  K    |  L   |   ;   |   '      |
// | SHIFT |  Z  |  X  |  C   |  V   |  B      |  MUTE  |  |        |    N       |  M    |  ,    |  .   |   /   | SHFT ENT |
//               | CTRL| ALT  | GUI  |SHFT NUM | LWR SPC|  |RSE BSPC|   SPACE    |  TAB  | ALT   | CTRL |
            bindings = <
&kp GRAVE &kp N1 &kp N2     &kp N3   &kp N4    &kp N5                             	        &kp N6           &kp N7      &kp N8    &kp N9    &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W      &kp E    &kp R     &kp T                              	        &kp Y            &kp U       &kp I     &kp O     &kp P    &kp BSLH
&kp ESC   &kp A  &kp S      &kp D    &kp F     &kp G                              	        &kp H            &kp J       &kp K     &kp L     &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X      &kp C    &kp V     &kp B    &kp C_MUTE          &none   	    &kp N            &kp M       &kp COMMA &kp DOT   &kp FSLH &mt RSHFT RET
                 &kp LCTRL  &kp LALT &kp LGUI  &td_ls   &lt LOWER SPACE     &lt RAISE BSPC  &kp SPACE        &kp TAB     &kp RALT  &kp RCTRL
            >;
           
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

        };

        dvorak_layer {
// ------------------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5      |                    |    6      |  7    |  8    |  9   |   0   | BKSPC    |
// |  TAB  |  '  |  ,  |  .   |  P   |  Y      |                    |    F      |  G    |  C    |  R   |   L   |   /      |
// |  ESC  |  A  |  O  |  E   |  U   |  I      |                    |    D      |  H    |  T    |  N   |   S   |   -      |
// | SHIFT |  ;  |  Q  |  J   |  K   |  X      |  MUTE  |  |        |    B      |  M    |  W    |  V   |   Z   | SHFT ENT |
//               | CTRL| ALT  | GUI  |SHFT NUM | LWR SPC|  |RSE BSPC|   SPACE   |  TAB  | ALT   | CTRL |
            bindings = <
&kp GRAVE &kp N1   &kp N2     &kp N3   &kp N4    &kp N5                             &kp N6   &kp N7      &kp N8    &kp N9    &kp N0   &trans
&trans    &kp SQT  &kp COMMA  &kp DOT  &kp P     &kp Y                              &kp F    &kp G       &kp C     &kp R     &kp L    &kp FSLH
&trans    &kp A    &kp O      &kp E    &kp U     &kp I                              &kp D    &kp H       &kp T     &kp N     &kp S    &kp MINUS
&trans    &kp SEMI &kp Q      &kp J    &kp K     &kp X    &kp C_MUTE       &none    &kp B    &kp M       &kp W     &kp V     &kp Z    &trans
                   &trans     &trans   &trans    &trans   &trans           &trans   &trans   &trans      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ---------------------------------------------------------------------------------------------------------------
// |  F12  |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11     |
// |  TAB  |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   \      |
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |   9  |    0  |   |      |
// | SHIFT |  `  |  ~  |  _   |   -  |  {([ |        |  |       |  })] |   +   |   =   |  :   |   \   | SHFT ENT | 
//               |CTRL | ALT  | GUI  | SHFT |        |  |BSPC DL|ENTER |  ESC  |  ALT  | CTRL |
            bindings = <
&kp F12  &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                       &kp F6    &kp F7        &kp F8          &kp F9    &kp F10   &kp F11
&trans   &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                    &kp CARET &kp AMPS      &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp BSLH
&trans   &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                       &kp N6    &kp N7        &kp N8          &kp N9    &kp N0    &kp PIPE
&trans   &kp GRAVE &kp TILDE &kp UNDER   &kp MINUS &td_lb    &none    &trans    &td_rb    &kp KP_PLUS   &kp KP_EQUAL    &kp COLON &kp BSLH  &trans
                   &trans    &trans      &trans    &kp LSHFT &trans   &td_bs_del &kp RET   &kp ESC       &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR |  BT1  | BT2  |  BT3  |  BT4  | USE BT |                    |      |      |       |      |       |       |
// |      |  INS  | PSCR | MENU  | REDO  | USE USB|                    | PGUP | HOME |   ^   | END  |       |       |
// |DVORAK|  ALT  | CTRL | SHIFT |       | CAPS   |                    | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// | SHFT |  UNDO | CUT  | COPY  | PASTE |        |PLAY PAUSE|  |      |      |      |       |      |       |       |
//                | CTRL | ALT   | GUI   |SHFT NUM| BSPC     |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &out OUT_BLE                     &none      &none       &none    &none     &none    &none 
&none       &kp INS         &kp PSCRN       &kp K_CMENU     &kp C_AC_REDO   &out OUT_USB                     &kp PG_UP  &kp HOME    &kp UP   &kp END   &none    &none 
&tog DVORAK &kp LALT        &kp LCTRL       &kp LSHFT       &none           &kp CLCK                         &kp PG_DN  &kp LEFT    &kp DOWN &kp RIGHT &kp DEL  &kp BSPC
&trans      &kp C_AC_UNDO   &kp C_AC_CUT    &kp C_AC_COPY   &kp C_AC_PASTE  &none        &kp C_PP    &none   &none      &none       &none    &none     &none    &none   
                            &trans          &trans          &trans          &td_lsnt     &kp BSPC    &none   &none      &none       &none    &none 
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp PG_UP PG_DN>;
        };
        
        numpad_layer {
// ------------------------------------------------------------------------------------------------------------
// |NUMLOCK|     |     |      |      |   <    |                    |  >   |  -    |   /   |   *  |   -   | BSPC     |
// | TAB   |     |     |  =   |   +  |   {    |                    |  }   |  7    |   8   |   9  |   +   |   :      |
// | ESC   |     |     |  _   |   -  |   (    |                    |  )   |  4    |   5   |   6  |   =   |   ;      |
// | SHFT  |     |     |      |      |   [    |        |  |        |  ]   |  1    |   2   |   3  | ENTER | SHFT ENT |
//               |     |      |      |TURN OFF|TURN OFF|  |BSPC LWR| SPCE |  0    |   .   |   ,  |
            bindings = <
&kp KP_NUM &none    &none    &none     &none     &kp LT                             &kp GT       &kp KP_MINUS   &kp KP_SLASH    &kp KP_MULTIPLY  &kp KP_MINUS  &trans 
&trans     &none    &none    &kp EQUAL &kp PLUS  &kp LBRC                           &kp RBRC     &kp KP_N7      &kp KP_N8       &kp KP_N9        &kp KP_PLUS   &kp COLON
&trans     &none    &none    &kp UNDER &kp MINUS &kp LPAR                           &kp RPAR     &kp KP_N4      &kp KP_N5       &kp KP_N6        &kp KP_EQUAL  &kp SEMI
&trans     &none    &none    &none     &none     &kp LBKT    &trans        &trans   &kp RBKT     &kp KP_N1      &kp KP_N2       &kp KP_N3        &kp RET       &trans 
                    &trans   &trans    &trans    &tog NUMPAD &tog NUMPAD   &trans   &kp SPACE    &kp KP_N0      &kp KP_DOT      &kp COMMA
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
